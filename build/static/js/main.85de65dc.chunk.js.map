{"version":3,"sources":["components/create.component.js","components/edit.component.js","components/index.component.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangePersonName","bind","assertThisInitialized","onChangeBusinessName","onChangeGSTNum","state","person_name","biz_name","gst_num","e","setState","target","value","obj","axios","post","then","res","console","log","data","react_default","a","createElement","style","marginTop","onSubmit","className","type","onChange","Component","Edit","Index","App","BrowserRouter","Link","to","id","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.85de65dc.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class Create extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.onChangePersonName =this.onChangePersonName.bind(this);\r\n        this.onChangeBusinessName =this.onChangeBusinessName.bind(this);\r\n        this.onChangeGSTNum =this.onChangeGSTNum.bind(this);\r\n        this.state = {\r\n            person_name:'',\r\n            biz_name:'',\r\n            gst_num:''\r\n        };\r\n    }\r\n    onChangePersonName(e){\r\n        this.setState(\r\n            {\r\n                person_name:e.target.value\r\n            }\r\n        );\r\n    }\r\n    onChangeBusinessName(e){\r\n        this.setState({\r\n            biz_name:e.target.value\r\n        });\r\n    }\r\n    onChangeGSTNum(e){\r\n        this.setState({\r\n            gst_num : e.target.value\r\n        });\r\n    }\r\n    onSubmit(){\r\n        //e.preventDefault();\r\n        const obj = {\r\n            person_name: this.state.person_name,\r\n            biz_name: this.state.biz_name,\r\n            gst_num: this.state.gst_num\r\n          };\r\n          axios.post('http://localhost:4000/business/add', obj)\r\n              .then(res => console.log(res.data));\r\n      \r\n        this.setState(\r\n            {\r\n                person_name:'',\r\n                biz_name:'',\r\n                gst_num:''\r\n            }\r\n        );\r\n    }\r\n    render(){\r\n        return (\r\n            <div style={{marginTop:10}}>\r\n                <h4>Welcome to Create Component</h4>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Person Name : </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.person_name} onChange={this.onChangePersonName}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add Business Name : </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.biz_name} onChange={this.onChangeBusinessName}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Add GST Number : </label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.gst_num} onChange={this.onChangeGSTNum}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Register Business\" className=\"btn btn-primary\"></input>\r\n                    </div>\r\n                </form>\r\n                <div>\r\n                    <div>Person : {this.state.person_name}</div>\r\n                    <div>Biz : {this.state.biz_name}</div>\r\n                    <div>GST : {this.state.gst_num}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class Edit extends Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <h4>Welcome to Edit Component</h4>\r\n            </div>\r\n        );\r\n    }\r\n}","import React,{Component} from 'react';\r\n\r\nexport default class Index extends Component{\r\n    render(){\r\n        return (\r\n        <div>\r\n            <h4>Welcome To Index Component</h4>\r\n        </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Create from './components/create.component';\nimport Edit from './components/edit.component';\nimport Index from './components/index.component';\nimport {BrowserRouter as Router,Switch,Link,Route} from 'react-router-dom';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link to={'/'} className='navbar-brand'>Home NAV</Link>\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link to={'/'} className=\"nav-link\">Home</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={'/create'} className=\"nav-link\">Create</Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link to={'/index'} className=\"nav-link\">Index</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n          <h2>Welcome to Home !!!!</h2>\n          <Switch>\n            <Route exact path='/create' component={Create}/>\n            <Route path='/edit/:id' component={Edit}/>\n            <Route path='/index' component={Index}/>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n<App/>\n</BrowserRouter>, \ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}